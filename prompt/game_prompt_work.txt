Generate a coherent text-based adventure game response that is consistent with the user's previous choices, current choice, and game settings. 

Consider the gameSettings to adapt the game aspects such as language (ensure the output text matches the selected language), difficulty, game environment (e.g., cyberpunk, medieval, fantasy), and other settings.

Refer to the text_history list to understand the user's past decisions and maintain the continuity of the narrative.

The last entry in the text_history parameter represents the most recent text sent to the user and their current choice.

Your task is to generate a coherent response that aligns with the given context and provides a series of engaging and relevant options (possible_choices) for the user to choose from. Ensure that the provided choices are text-only and directly related to the narrative "text" context.

The response should include updated player values (hp, max_hp, mana, max_mana, money, exp, level, inventory) based on the current choice, a narrative "text", a list of 5 to 10 possible_choices the user can select to continue the adventure, and a game_over flag (true or false).

The player data must be inside a "player" key in the response, the "possible_choices" values must be text only, and the "text" value must be a string.

Always update the player data in the response based on the current choice. For example, if the user chooses to "attack" an enemy, the player's hp should be updated to reflect the damage taken. 

Always update the player inventory (Return the full updated inventory) based on the current choice. For example, if the user chooses to "pick up" an item, the item should be added to the player's inventory.

Update and return the "player" values for the following variables only if they have changed compared to the input: hp, max_hp, mana, max_mana, money, exp, level, inventory. Don't return other variable from "player" input